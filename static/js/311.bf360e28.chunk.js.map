{"version":3,"file":"static/js/311.bf360e28.chunk.js","mappings":"8LAiFA,WAAeA,EAAAA,EAAAA,KATS,SAACC,GACrB,MAAO,CACHC,WAAYD,EAAME,YAAYD,WAC9BE,qBAAsBH,EAAME,YAAYC,wBAMR,CAAEC,WAAAA,EAAAA,IAA1C,EAzEyB,SAACC,GAAW,IAAD,IAEhC,GAAwEC,EAAAA,EAAAA,IAAQ,CAC5EC,KAAM,WADFC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAAkCC,GAApD,EAAgCC,MAAhC,EAAuCC,UAAaF,QAApD,EAA8DG,MAQ9D,OACI,kBAAMC,SAAUL,GALH,SAACM,GACdV,EAAMD,WAAWW,EAAKC,MAAOD,EAAKE,SAAUF,EAAKG,WAAYH,EAAKI,YAIlE,WACI,4BACI,0BAAOC,UAAWC,EAAAA,EAAAA,IAASC,YAAY,QAAQC,KAAK,QAAWf,EAAS,QAAS,CAC7EgB,SAAU,oCAEd,kBAAMJ,UAAWC,EAAAA,EAAAA,MAAjB,WACI,iBAAMD,UAAWC,EAAAA,EAAAA,OAAjB,iBACA,iBAAMD,UAAWC,EAAAA,EAAAA,KAAjB,oDAGR,0BACW,OAANX,QAAM,IAANA,OAAA,EAAAA,EAAQM,SAAS,gBAAKI,UAAWC,EAAAA,EAAAA,UAAhB,UAAsC,OAANX,QAAM,IAANA,GAAA,UAAAA,EAAQM,aAAR,eAAeS,UAAW,cAEhF,4BACI,oCAAWjB,EAAS,WAAY,CAC5BgB,SAAU,kCADd,IAEIE,KAAK,WAAWN,UAAWC,EAAAA,EAAAA,IAASC,YAAY,WAAWC,KAAK,eACpE,kBAAMH,UAAWC,EAAAA,EAAAA,MAAjB,WACI,iBAAMD,UAAWC,EAAAA,EAAAA,OAAjB,iBACA,iBAAMD,UAAWC,EAAAA,EAAAA,KAAjB,yBAGR,0BACW,OAANX,QAAM,IAANA,OAAA,EAAAA,EAAQO,YAAY,gBAAKG,UAAWC,EAAAA,EAAAA,UAAhB,UAAsC,OAANX,QAAM,IAANA,GAAA,UAAAA,EAAQO,gBAAR,eAAkBQ,UAAW,cAEtF,yBACKpB,EAAMF,uBAAwB,gBAAKiB,UAAWC,EAAAA,EAAAA,UAAhB,8DAEnC,4BACI,oCAAWb,EAAS,eAApB,IAAmCkB,KAAK,aAAaN,UAAWC,EAAAA,EAAAA,IAASC,YAAY,QAAQC,KAAK,eAClG,iBAAMH,UAAWC,EAAAA,EAAAA,SAAjB,4BAEHhB,EAAMJ,aACH,4BACI,4BACI,0BAAK,gBAAKmB,UAAWC,EAAAA,EAAAA,QAAaM,IAAKtB,EAAMJ,gBAC7C,oCAAWO,EAAS,YAApB,IAAgCkB,KAAK,UAAUN,UAAWC,EAAAA,EAAAA,QAAaC,YAAY,GAAGC,KAAK,cAE/F,0BACI,gBAAKH,UAAWC,EAAAA,EAAAA,UAAhB,yCAGZ,mBAAQD,UAAWC,EAAAA,EAAAA,eAAnB,UACI,gBAAKD,UAAWC,EAAAA,EAAAA,gBAAhB,uBAEJ,iBAAKD,UAAWC,EAAAA,EAAAA,EAAhB,uEAAgF,mBAC5E,cAAGD,UAAWC,EAAAA,EAAAA,IAASO,KAAK,uCAA5B,sDACJ,iBAAKR,UAAWC,EAAAA,EAAAA,EAAhB,oCAA6C,mBACzC,SAAC,KAAD,CAASD,UAAWC,EAAAA,EAAAA,IAASQ,GAAG,aAAhC,qBADJ","sources":["components/Login/Login(react_hook).jsx"],"sourcesContent":["import React from \"react\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport Log from \"./Login.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { logInThunk } from \"../../State/auth_section\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst RegistrationForm = (props) => {\r\n\r\n    const { register, handleSubmit, watch, formState: { errors }, reset } = useForm({\r\n        mode: \"onBlur\"\r\n    });\r\n\r\n    const onSubmit = (data) => {\r\n        props.logInThunk(data.email, data.password, data.rememberMe, data.captcha)\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div>\r\n                <input className={Log.inp} placeholder=\"Email\" type=\"text\" {...register(\"email\", {\r\n                    required: \"The field must not be empty!\"\r\n                })}></input>\r\n                <span className={Log.spanM}>\r\n                    <span className={Log.spanSl}>//</span>\r\n                    <span className={Log.span}>daniilsokolov15012006@gmail.com</span>\r\n                </span>\r\n            </div>\r\n            <div>\r\n                {errors?.email && <div className={Log.error_val}>{errors?.email?.message || \"Error!\"}</div>}\r\n            </div>\r\n            <div>\r\n                <input {...register(\"password\", {\r\n                    required: \"The field must not be empty!\"\r\n                })} name=\"password\" className={Log.inp} placeholder=\"Password\" type=\"password\"></input>\r\n                <span className={Log.spanM}>\r\n                    <span className={Log.spanSl}>//</span>\r\n                    <span className={Log.span}>1234</span>\r\n                </span>\r\n            </div>\r\n            <div>\r\n                {errors?.password && <div className={Log.error_val}>{errors?.password?.message || \"Error!\"}</div>}\r\n            </div>\r\n            <div>\r\n                {props.isErrorEmailPassword && <div className={Log.error_val}>Check if your email and password are correct.</div>}\r\n            </div>\r\n            <div>\r\n                <input {...register(\"rememberMe\")} name=\"rememberMe\" className={Log.rem} placeholder=\"Login\" type=\"checkbox\"></input>\r\n                <span className={Log.rem_text}>Remember me</span>\r\n            </div>\r\n            {props.captchaUrl &&\r\n                <div>\r\n                    <div>\r\n                        <div><img className={Log.img_cap} src={props.captchaUrl}></img></div>\r\n                        <input {...register(\"captcha\")} name=\"captcha\" className={Log.inp_cap} placeholder=\"\" type=\"text\"></input>\r\n                    </div>\r\n                    <div>\r\n                        <div className={Log.error_val}>Complete the captcha.</div>\r\n                    </div>\r\n                </div>}\r\n            <button className={Log.nav_link_sub_2}>\r\n                <div className={Log.nav_link_sub2_2}>Log in</div>\r\n            </button>\r\n            <div className={Log.p}>If you are not registered on the site, follow this link: <br />\r\n                <a className={Log.p_a} href=\"https://social-network.samuraijs.com\">https://social-network.samuraijs.com</a></div>\r\n            <div className={Log.p}>To log out, go to the <br />\r\n                <NavLink className={Log.p_a} to=\"/MyProfile\" >Profile</NavLink> page and click the \"Log out\" button.</div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        captchaUrl: state.authSection.captchaUrl,\r\n        isErrorEmailPassword: state.authSection.isErrorEmailPassword,\r\n        // isErrorCaptcha: state.authSection.isErrorCaptcha\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { logInThunk })(RegistrationForm);"],"names":["connect","state","captchaUrl","authSection","isErrorEmailPassword","logInThunk","props","useForm","mode","register","handleSubmit","errors","watch","formState","reset","onSubmit","data","email","password","rememberMe","captcha","className","Log","placeholder","type","required","message","name","src","href","to"],"sourceRoot":""}